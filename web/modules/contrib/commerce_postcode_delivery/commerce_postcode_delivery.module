<?php

/**
 * @file
 * Provides postcode based delivery and shipping charges.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_commerce_shipping_methods_alter().
 */
function commerce_postcode_delivery_commerce_shipping_methods_alter(&$shipping_methods, $shipment) {
  foreach ($shipping_methods as $shipping_method_id => $shipping_method) {
    $amount = 0;

    // Do not show a shipping method when its not applicable for current postal code.
    $shipping_rates = $shipping_method->getPlugin()->calculateRates($shipment);
    foreach ($shipping_rates as $shipping_rate) {
      $amount += $shipping_rate->getAmount()->getNumber();
    }

    if ($amount == 0.01) {
      unset($shipping_methods[$shipping_method_id]);
    }
  }
}

/**
 * Implements hook_mail().
 */
function commerce_postcode_delivery_mail($key, &$message, $params) {
  if ($key == 'notify_shipping_order') {
    if (isset($params['headers'])) {
      $message['headers'] = array_merge($message['headers'], $params['headers']);
    }

    $message['from'] = $params['from'];
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['body'];
  }
}

/**
 * Implements hook_theme().
 */
function commerce_postcode_delivery_theme($existing, $type, $theme, $path) {
  return [
    'commerce_postcode_delivery_email_notification' => [
      'variables' => [
        'order_entity' => NULL,
        'billing_information' => NULL,
        'shipping_information' => NULL,
        'payment_method' => NULL,
        'shipping_method_name' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_help().
 */
function commerce_postcode_delivery_help($route_name, RouteMatchInterface $route_match) {
  $output = '';
  if ($route_name == 'help.page.commerce_postcode_delivery') {
    $output .= t('The module provides a shipping method called <strong>Commerce postcode delivery</strong>.');
    $output .= t(' You can use this shipping method multiple times to create shipping or delivery charges based on time, distance, etc.');

    $output .= t('<br />Lets take an example of one such use case where a store needs to provide following shipment methods.');
    $output .= t(' Its quite possible that the store only provides 2 hour and 4 hour delivery to nearby areas only. The shipping charges are:');
    $output .= t('<ul>');
    $output .= t('<li><strong>2 hour delivery</strong> - $30</li>');
    $output .= t('<li><strong>4 hour delivery</strong> - $20</li>');
    $output .= t('<li><strong>24 hour delivery</strong> - $10</li>');
    $output .= t('<li><strong>Normal delivery</strong> (2-3 days) - $5</li>');
    $output .= t('<li>Pick-up from shop - $0</li>');
    $output .= t('</ul>');
    $output .= t('Here, create 4 <em>Commerce postcode delivery</em> shipping methods (highlighted as <strong>bold</strong>) above, each having a CSV file in the format as shown below.');
    $output .= t(' Each CSV file must have exactly same postal codes, that is if a store can deliver to a postal code V1X 165 in 2 hours, or 4 hours time,');
    $output .= t(' the CSV files uploaded to these two shipping methods must have a row for V1X 165 with their corresponding shipping charge.');
    $output .= t(' For any shipping charge not applicable to a service area or a postal code, it will be hidden from the customer on checkout page.');

    $csvManager = \Drupal::service('commerce_postcode_delivery.csv_manager');
    $output .= t('<br/><br/> A Sample CSV format:');
    $output .= $csvManager->getCsvDescription();

    $output .= t(' <br />Make sure, that you strictly follow this format to create a CSV file. Additionally,');
    $output .= t('<ul>');
    $output .= t('<li><strong>Windows users</strong> can create an Excel sheet and export it as a CSV,</li>');
    $output .= t('<li>Same goes for <strong>Mac users</strong>, create a sheet in Numbers, and export it as a CSV.</li>');
    $output .= t('</ul>');
    $output .= t('After uploading the CSV, you can preview it right in the config itself.');
    $output .= t(' Thats it! You have set up dynamic, ever evolving shipping rate charges.');

    $output .= t('<br /><br /><em>A note for developers:</em>');
    $output .= t('<br /><em>The service CsvManager can be extended to suit any other use case you need to implement.</em>');
  }

  return $output;
}
